services:
  web:
    build:
      context: ./web
    container_name: desafio-web
    volumes:
      - ./web/app:/app
      - "/app/node_modules"
    ports:
      - "80:4200"
    networks:
      - desafio-network

  api:
    build:
      context: ./api
    container_name: desafio-backend
    volumes:
      - ./api:/var/www
    ports:
      - "8000:80"
    networks:
      - desafio-network
    depends_on:
      - mysql

  api-worker:
    build:
      context: ./api
    container_name: desafio-worker
    command: php artisan schedule:work
    volumes:
      - ./api:/var/www
    networks:
      - desafio-network
    depends_on:
      - api

  mysql:
    image: mysql:8.0
    container_name: desafio-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: desafio
      MYSQL_DATABASE: desafio
      MYSQL_USER: desafio
      MYSQL_PASSWORD: desafio
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3306:3306"
    networks:
      - desafio-network
    volumes:
      - mysql-data:/var/lib/mysql

  composer:
    image: composer:2.2.5
    container_name: desafio-composer
    command: ["composer", "update"]
    working_dir: /var/www
    volumes:
        - "./api:/var/www"

  json-server:
    image: vimagick/json-server
    container_name: desafio-json-server
    command: -h 0.0.0.0 -p 3000 -w db.json
    init: true
    ports:
      - "3000:3000"
    volumes:
      - ./json-server/data:/data
    restart: always
    networks:
      - desafio-network

networks:
  desafio-network:
    driver: bridge

volumes:
  mysql-data: